#include <stdint.h>
#include <modbus/modbus.h>

typedef struct
{
    uint16_t Drv_FrequencyCommand;
    uint16_t Drv_AccelTime;
    uint16_t Drv_DecelTime;
    uint16_t Drv_DriveMode;
    uint16_t Drv_FrequencySettingMethod;
    uint16_t Drv_MultiStepFreq1;
    uint16_t Drv_MultiStepFreq2;
    uint16_t Drv_MultiStepFreq3;
    uint16_t Drv_OutputCurrent;
    uint16_t Drv_MotorRPM;
    uint16_t Drv_InverterDCLinkVoltage;
    uint16_t Drv_UserDisplaySelect;
    uint16_t Drv_FaultDisplay;
    uint16_t Drv_DirectionOfMotorRotationSelect;
    uint16_t Drv_DriveMode2;
    uint16_t Drv_FrequencySettingMethod2;
    uint16_t Drv_PIDControlStandardValueSetting;
    uint16_t Drv_PIDControlFeedbackAmount;

    uint16_t F1_JumpCode;
    uint16_t F1_ForvardReverseRunDisable;
    uint16_t F1_AccelPattern;
    uint16_t F1_DecelPattern;
    uint16_t F1_StopModeSelect;
    uint16_t F1_DCBrakeStartFrequency;
    uint16_t F1_DCBrakeWaitTime;
    uint16_t F1_DCBrakeVoltage;
    uint16_t F1_DCBrakeTime;
    uint16_t F1_DCBrakeStartVoltage;
    uint16_t F1_DCBrakeStartTime;
    uint16_t F1_TimeForMegnatizingAMotor;
    uint16_t F1_JogFrequency;
    uint16_t F1_MaxFrequency;
    uint16_t F1_BaseFrequency;
    uint16_t F1_StartFrequency;
    uint16_t F1_FrequencyHighLowLimit;
    uint16_t F1_FrequencyHighLimit;
    uint16_t F1_FrequencyLowLimit;
    uint16_t F1_TorqueBoostSelect;
    uint16_t F1_TorqueBoostInForvardDirection;
    uint16_t F1_TorqueBoostInReverseDirection;
    uint16_t F1_VFPattern;
    uint16_t F1_UserVFFrequency1;
    uint16_t F1_UserVFVoltage1;
    uint16_t F1_UserVFFrequency2;
    uint16_t F1_UserVFVoltage2;
    uint16_t F1_UserVFFrequency3;
    uint16_t F1_UserVFVoltage3;
    uint16_t F1_UserVFFrequency4;
    uint16_t F1_UserVFVoltage4;
    uint16_t F1_OutputVoltageAdjustments;
    uint16_t F1_EnergySavingLevel;
    uint16_t F1_ElectronicThermalSelect;
    uint16_t F1_ElectronicThermalLevelFor1min;
    uint16_t F1_ElectronicThermalLevelForCont;
    uint16_t F1_MotorCoolingMethod;
    uint16_t F1_OverloadWarningLevel;
    uint16_t F1_OverloadWarningTime;
    uint16_t F1_OverloadTripSelect;
    uint16_t F1_OverloadTripLevel;
    uint16_t F1_OverloadtripTime;
    uint16_t F1_StallPreventionSelect;
    uint16_t F1_StallPreventionLevel;
    uint16_t F1_StallPreventionDurDecVolLimSel;
    uint16_t F1_SaveUpDownFrequencySelect;
    uint16_t F1_SaveUpDownFrequency;
    uint16_t F1_UpDownModeSelect;
    uint16_t F1_UpDownStepFrequency;
    uint16_t F1_DrawnRunModeSelect;
    uint16_t F1_DrawRate;

    uint16_t F2_JumpCode2;
    uint16_t F2_FaultHistory1;
    uint16_t F2_FaultHistory2;
    uint16_t F2_FaultHistory3;
    uint16_t F2_FaultHistory4;
    uint16_t F2_FaultHistory5;
    uint16_t F2_ResetFaultHistory;
    uint16_t F2_DwellFrequency;
    uint16_t F2_DwellTime;
    uint16_t F2_SkipFrequencySelect;
    uint16_t F2_SkipFrequencyLowLimit1;
    uint16_t F2_SkipFrequencyHiLimit1;
    uint16_t F2_SkipFrequencyLowLimit2;
    uint16_t F2_SkipFrequencyHiLimit2;
    uint16_t F2_SkipFrequencyLowLimit3;
    uint16_t F2_SkipFrequencyHiLimit3;
    uint16_t F2_SCurveAccelDecelStartSide;
    uint16_t F2_SCurveAccelDecelEndSide;
    uint16_t F2_IOPhaseLoseProtectionSelect;
    uint16_t F2_PowerOnStartSelect;
    uint16_t F2_RestartAfterFaltResetSelection;
    uint16_t F2_SpeedSearchSelect;
    uint16_t F2_CurrentLevelDuringSpeedSreach;
    uint16_t F2_PGainDuringSpeedSreach;
    uint16_t F2_IGainDuringSpeedSreach;
    uint16_t F2_NumberOfAutoRestartTry;
    uint16_t F2_AutoRestartTime;
    uint16_t F2_MotorTypeSelect;
    uint16_t F2_NumbersOfMotorPoles;
    uint16_t F2_RatedSlipFrequency;
    uint16_t F2_MotorRatedCurrent;
    uint16_t F2_NoLoadMotorCurrent;
    uint16_t F2_MotorEfficiency;
    uint16_t F2_LoadInteriaRate;
    uint16_t F2_CarrierFrequencySelect;
    uint16_t F2_ControlModeSelect;
    uint16_t F2_AutoTuning;
    uint16_t F2_StatorResistance;
    uint16_t F2_LeakageInductance;
    uint16_t F2_SensorlessPGain;
    uint16_t F2_SensorlessIGain;
    uint16_t F2_SensorlessTorqueLimit;
    uint16_t F2_PWMModeSelect;
    uint16_t F2_PIDSelect;
    uint16_t F2_PIDFBSelect;
    uint16_t F2_PGainForPID;
    uint16_t F2_IntegralTimeForPID;
    uint16_t F2_DifferentialTimeForPID;
    uint16_t F2_PIDModeControlSelect;
    uint16_t F2_PIDOutputFrequencyHighLimit;

    uint16_t IO_JumpCodeIOGroup;
    uint16_t IO_NVInputMinVoltage;
    uint16_t IO_FrequencyCorrespondingToL2;
    uint16_t IO_NVInputMaxVoltage;
    uint16_t IO_FrequencyCorrespondingToL4;
    uint16_t IO_FilterTimeConstantForV1Input;
    uint16_t IO_V1InputMinVoltage;
    uint16_t IO_FrequencyCorrespondingToL7;
    uint16_t IO_V1InputMaxVoltage;
    uint16_t IO_FrequencyCorrespondingToL9;
    uint16_t IO_FilterTimeConstantForIInput;
    uint16_t IO_IInputMinCurrent;
    uint16_t IO_FrequencyCorrespondingToL12;
    uint16_t IO_iInputMaxCurrent;
    uint16_t IO_FrequencyCorrenspondingToL14;
    uint16_t IO_CriteriaForAnalogInpSignalLoss;
    uint16_t IO_MultifunctInputTerminalP1Define;
    uint16_t IO_MultifunctInputTerminalP2Define;
    uint16_t IO_MultifunctInputTerminalP3Define;
    uint16_t IO_MultifunctInputTerminalP4Define;
    uint16_t IO_MultifunctInputTerminalP5Define;
    uint16_t IO_MultifunctInputTerminalP6Define;
    uint16_t IO_MultifunctInputTerminalP7Define;
    uint16_t IO_MultifunctInputTerminalP8Define;
    uint16_t IO_InputTerminalStatusDisplay;
    uint16_t IO_OutputTerminalStatusDisplay;
    uint16_t IO_FilterTConstMultiFunInpTerminal;
    uint16_t IO_MultiStepFrequency4;
    uint16_t IO_MultiStepFrequency5;
    uint16_t IO_MultiStepFrequency6;
    uint16_t IO_MultiStepFrequency7;
    uint16_t IO_MultiAccelTime1;
    uint16_t IO_MultiDecelTime1;
    uint16_t IO_MultiAccelTime2;
    uint16_t IO_MultiDecelTime2;
    uint16_t IO_MultiAccelTime3;
    uint16_t IO_MultiDecelTime3;
    uint16_t IO_MultiAccelTime4;
    uint16_t IO_MultiDecelTime4;
    uint16_t IO_MultiAccelTime5;
    uint16_t IO_MultiDecelTime5;
    uint16_t IO_MultiAccelTime6;
    uint16_t IO_MultiDecelTime6;
    uint16_t IO_MultiAccelTime7;
    uint16_t IO_MultiDecelTime7;
    uint16_t IO_AnalogOutputItemSelect;
    uint16_t IO_AnalogOutputLevelAdjustment;
    uint16_t IO_FrequencyDetectionLevel;
    uint16_t IO_FrequencyDetectionBandwith;
    uint16_t IO_MultifuncOutputTerminalSelect;

    int isRun : 1;
    int slaveAddress : 8;
    modbus_t *ctx;

} IG5A_t;

IG5A_t *IG5A_new();
void IG5A_ctor(IG5A_t *IG5A, int address, modbus_t *ctx);

void IG5A_Drv_Get_FrequencyCommand(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_AccelTime(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_DecelTime(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_DriveMode(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_FrequencySettingMethod(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_MultiStepFreq1(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_MultiStepFreq2(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_MultiStepFreq3(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_OutputCurrent(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_MotorRPM(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_InverterDCLinkVoltage(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_UserDisplaySelect(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_FaultDisplay(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_DirectionOfMotorRotationSelect(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_DriveMode2(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_FrequencySettingMethod2(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_PIDControlStandardValueSetting(IG5A_t *IG5A, int *status);
void IG5A_Drv_Get_PIDControlFeedbackAmount(IG5A_t *IG5A, int *status);

void IG5A_Drv_Set_FrequencyCommand(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_AccelTime(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_DecelTime(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_DriveMode(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_FrequencySettingMethod(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_MultiStepFreq1(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_MultiStepFreq2(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_MultiStepFreq3(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_OutputCurrent(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_MotorRPM(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_InverterDCLinkVoltage(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_UserDisplaySelect(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_FaultDisplay(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_DirectionOfMotorRotationSelect(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_DriveMode2(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_FrequencySettingMethod2(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_PIDControlStandardValueSetting(IG5A_t *IG5A, int *status);
void IG5A_Drv_Set_PIDControlFeedbackAmount(IG5A_t *IG5A, int *status);

void IG5A_F1_Get_JumpCode(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_ForvardReverseRunDisable(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_AccelPattern(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_DecelPattern(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_StopModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_DCBrakeStartFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_DCBrakeWaitTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_DCBrakeVoltage(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_DCBrakeTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_DCBrakeStartVoltage(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_DCBrakeStartTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_TimeForMegnatizingAMotor(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_JogFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_MaxFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_BaseFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_StartFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_FrequencyHighLowLimit(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_FrequencyHighLimit(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_FrequencyLowLimit(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_TorqueBoostSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_TorqueBoostInForvardDirection(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_TorqueBoostInReverseDirection(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_VFPattern(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UserVFFrequency1(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UserVFVoltage1(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UserVFFrequency2(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UserVFVoltage2(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UserVFFrequency3(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UserVFVoltage3(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UserVFFrequency4(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UserVFVoltage4(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_OutputVoltageAdjustments(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_EnergySavingLevel(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_ElectronicThermalSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_ElectronicThermalLevelFor1min(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_ElectronicThermalLevelForCont(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_MotorCoolingMethod(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_OverloadWarningLevel(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_OverloadWarningTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_OverloadTripSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_OverloadTripLevel(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_OverloadtripTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_StallPreventionSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_StallPreventionLevel(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_StallPreventionDurDecVolLimSel(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_SaveUpDownFrequencySelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_SaveUpDownFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UpDownModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_UpDownStepFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_DrawnRunModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Get_DrawRate(IG5A_t *IG5A, int *status);

void IG5A_F1_Set_JumpCode(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_ForvardReverseRunDisable(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_AccelPattern(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_DecelPattern(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_StopModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_DCBrakeStartFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_DCBrakeWaitTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_DCBrakeVoltage(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_DCBrakeTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_DCBrakeStartVoltage(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_DCBrakeStartTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_TimeForMegnatizingAMotor(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_JogFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_MaxFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_BaseFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_StartFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_FrequencyHighLowLimit(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_FrequencyHighLimit(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_FrequencyLowLimit(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_TorqueBoostSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_TorqueBoostInForvardDirection(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_TorqueBoostInReverseDirection(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_VFPattern(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UserVFFrequency1(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UserVFVoltage1(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UserVFFrequency2(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UserVFVoltage2(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UserVFFrequency3(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UserVFVoltage3(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UserVFFrequency4(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UserVFVoltage4(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_OutputVoltageAdjustments(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_EnergySavingLevel(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_ElectronicThermalSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_ElectronicThermalLevelFor1min(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_ElectronicThermalLevelForCont(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_MotorCoolingMethod(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_OverloadWarningLevel(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_OverloadWarningTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_OverloadTripSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_OverloadTripLevel(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_OverloadtripTime(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_StallPreventionSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_StallPreventionLevel(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_StallPreventionDurDecVolLimSel(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_SaveUpDownFrequencySelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_SaveUpDownFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UpDownModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_UpDownStepFrequency(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_DrawnRunModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F1_Set_DrawRate(IG5A_t *IG5A, int *status);


void IG5A_F2_Get_JumpCode2(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_FaultHistory1(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_FaultHistory2(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_FaultHistory3(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_FaultHistory4(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_FaultHistory5(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_ResetFaultHistory(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_DwellFrequency(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_DwellTime(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SkipFrequencySelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SkipFrequencyLowLimit1(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SkipFrequencyHiLimit1(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SkipFrequencyLowLimit2(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SkipFrequencyHiLimit2(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SkipFrequencyLowLimit3(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SkipFrequencyHiLimit3(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SCurveAccelDecelStartSide(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SCurveAccelDecelEndSide(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_IOPhaseLoseProtectionSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_PowerOnStartSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_RestartAfterFaltResetSelection(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SpeedSearchSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_CurrentLevelDuringSpeedSreach(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_PGainDuringSpeedSreach(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_IGainDuringSpeedSreach(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_NumberOfAutoRestartTry(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_AutoRestartTime(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_MotorTypeSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_NumbersOfMotorPoles(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_RatedSlipFrequency(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_MotorRatedCurrent(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_NoLoadMotorCurrent(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_MotorEfficiency(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_LoadInteriaRate(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_CarrierFrequencySelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_ControlModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_AutoTuning(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_StatorResistance(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_LeakageInductance(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SensorlessPGain(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SensorlessIGain(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_SensorlessTorqueLimit(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_PWMModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_PIDSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_PIDFBSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_PGainForPID(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_IntegralTimeForPID(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_DifferentialTimeForPID(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_PIDModeControlSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Get_PIDOutputFrequencyHighLimit(IG5A_t *IG5A, int *status);

void IG5A_IO_Get_JumpCodeIOGroup(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_NVInputMinVoltage(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FrequencyCorrespondingToL2(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_NVInputMaxVoltage(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FrequencyCorrespondingToL4(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FilterTimeConstantForV1Input(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_V1InputMinVoltage(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FrequencyCorrespondingToL7(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_V1InputMaxVoltage(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FrequencyCorrespondingToL9(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FilterTimeConstantForIInput(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_IInputMinCurrent(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FrequencyCorrespondingToL12(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_iInputMaxCurrent(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FrequencyCorrenspondingToL14(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_CriteriaForAnalogInpSignalLoss(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultifunctInputTerminalP1Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultifunctInputTerminalP2Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultifunctInputTerminalP3Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultifunctInputTerminalP4Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultifunctInputTerminalP5Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultifunctInputTerminalP6Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultifunctInputTerminalP7Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultifunctInputTerminalP8Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_InputTerminalStatusDisplay(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_OutputTerminalStatusDisplay(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FilterTConstMultiFunInpTerminal(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiStepFrequency4(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiStepFrequency5(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiStepFrequency6(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiStepFrequency7(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiAccelTime1(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiDecelTime1(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiAccelTime2(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiDecelTime2(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiAccelTime3(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiDecelTime3(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiAccelTime4(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiDecelTime4(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiAccelTime5(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiDecelTime5(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiAccelTime6(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiDecelTime6(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiAccelTime7(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultiDecelTime7(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_AnalogOutputItemSelect(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_AnalogOutputLevelAdjustment(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FrequencyDetectionLevel(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_FrequencyDetectionBandwith(IG5A_t *IG5A, int *status);
void IG5A_IO_Get_MultifuncOutputTerminalSelect(IG5A_t *IG5A, int *status);

void IG5A_F2_Set_JumpCode2(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_FaultHistory1(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_FaultHistory2(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_FaultHistory3(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_FaultHistory4(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_FaultHistory5(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_ResetFaultHistory(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_DwellFrequency(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_DwellTime(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SkipFrequencySelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SkipFrequencyLowLimit1(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SkipFrequencyHiLimit1(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SkipFrequencyLowLimit2(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SkipFrequencyHiLimit2(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SkipFrequencyLowLimit3(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SkipFrequencyHiLimit3(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SCurveAccelDecelStartSide(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SCurveAccelDecelEndSide(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_IOPhaseLoseProtectionSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_PowerOnStartSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_RestartAfterFaltResetSelection(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SpeedSearchSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_CurrentLevelDuringSpeedSreach(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_PGainDuringSpeedSreach(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_IGainDuringSpeedSreach(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_NumberOfAutoRestartTry(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_AutoRestartTime(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_MotorTypeSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_NumbersOfMotorPoles(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_RatedSlipFrequency(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_MotorRatedCurrent(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_NoLoadMotorCurrent(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_MotorEfficiency(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_LoadInteriaRate(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_CarrierFrequencySelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_ControlModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_AutoTuning(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_StatorResistance(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_LeakageInductance(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SensorlessPGain(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SensorlessIGain(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_SensorlessTorqueLimit(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_PWMModeSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_PIDSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_PIDFBSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_PGainForPID(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_IntegralTimeForPID(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_DifferentialTimeForPID(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_PIDModeControlSelect(IG5A_t *IG5A, int *status);
void IG5A_F2_Set_PIDOutputFrequencyHighLimit(IG5A_t *IG5A, int *status);

void IG5A_IO_Set_JumpCodeIOGroup(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_NVInputMinVoltage(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FrequencyCorrespondingToL2(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_NVInputMaxVoltage(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FrequencyCorrespondingToL4(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FilterTimeConstantForV1Input(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_V1InputMinVoltage(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FrequencyCorrespondingToL7(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_V1InputMaxVoltage(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FrequencyCorrespondingToL9(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FilterTimeConstantForIInput(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_IInputMinCurrent(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FrequencyCorrespondingToL12(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_iInputMaxCurrent(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FrequencyCorrenspondingToL14(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_CriteriaForAnalogInpSignalLoss(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultifunctInputTerminalP1Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultifunctInputTerminalP2Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultifunctInputTerminalP3Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultifunctInputTerminalP4Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultifunctInputTerminalP5Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultifunctInputTerminalP6Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultifunctInputTerminalP7Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultifunctInputTerminalP8Define(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_InputTerminalStatusDisplay(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_OutputTerminalStatusDisplay(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FilterTConstMultiFunInpTerminal(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiStepFrequency4(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiStepFrequency5(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiStepFrequency6(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiStepFrequency7(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiAccelTime1(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiDecelTime1(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiAccelTime2(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiDecelTime2(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiAccelTime3(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiDecelTime3(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiAccelTime4(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiDecelTime4(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiAccelTime5(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiDecelTime5(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiAccelTime6(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiDecelTime6(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiAccelTime7(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultiDecelTime7(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_AnalogOutputItemSelect(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_AnalogOutputLevelAdjustment(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FrequencyDetectionLevel(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_FrequencyDetectionBandwith(IG5A_t *IG5A, int *status);
void IG5A_IO_Set_MultifuncOutputTerminalSelect(IG5A_t *IG5A, int *status);